## solving equation using false position method in python
x = np.linspace(2.0005, 3.0005, 1000)
f = lambda x : x**3 -2*x -5
tol = 1e-5
a, b = 2, 3
#graph the function
fig, ax = plt.subplots(figsize=(12, 4))
ax.plot(x, f(x), lw = 2)
ax.axhline(0, ls =':', color = 'k')
ax.set_xticks([2.0, 2.2, 2.4, 2.6,2.8, 3.0])
ax.set_xlabel(r'$x$', fontsize = 18)
ax.set_ylabel(r'$f(x)$', fontsize = 18)
## find the root with the false position method and visualise
fa, fb, fm = f(a), f(b), 1
ax.plot(a, fa, 'ko')
ax.plot(b, fb, 'ko')
ax.text(a, fa + 0.5, r"$a$", ha='center', fontsize=18)
ax.text(b, fb + 0.5, r"$b$", ha='center', fontsize=18)
n = 1
while np.abs(fm) > tol:
    m = (a*f(b) - b*(fa))/(f(b)-f(a))
    fm = f(m)
              
              
    ax.plot(m, fm, 'ko')
    ax.text(m, fm-0.5, r"$m$", ha = 'center', fontsize = 18 )
    n+= 1
              
              
    if np.sign(fa) == np.sign(fm):
        a, fa = m, fm
    else:
        b, fb = m, fm
ax.plot(m, fm, 'r*', markersize=10)
ax.annotate("Root approximately at %.3f" % m,fontsize=14,
            family="serif",xy=(a, fm),
            xycoords='data',xytext=(-150, +50),
            textcoords='offset points',arrowprops=dict(arrowstyle="->",connectionstyle="arc3, rad=-.5"))
ax.set_title("False Position Method")
